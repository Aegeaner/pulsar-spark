/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins.withId('java') {
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'

    compileJava {
        options.compilerArgs.addAll([
                "-Xlint:deprecation",
                "-Xlint:divzero",
                "-Xlint:empty",
                "-Xlint:fallthrough",
                "-Xlint:finally",
                "-Xlint:overrides",
                "-Xlint:path",
                "-Werror"
        ])
    }

    archivesBaseName = "segmentx" + project.path.replace(':', '-')

    task sourceJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.java
    }
    artifacts { archives sourceJar }

    task generateJavadoc(type: Javadoc) {
        source = sourceSets.main.allJava
        failOnError = false
    }
    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from generateJavadoc
    }
    artifacts { archives javadocJar }

    task testJar(type: Jar) {
        classifier = 'tests'
        from sourceSets.test.output
    }
    artifacts { testRuntime testJar }

    dependencies {
        compile group: 'org.slf4j', name:'slf4j-api', version: slf4jVersion
        testCompile group: 'junit', name:'junit', version: junitVersion
    }
}
